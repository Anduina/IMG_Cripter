/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.db4o.ObjectSet;
import dao.DAO;
import entidades.Chave;
import entidades.Imagem;
import entidades.MyModel;
import imgCripter.ImgEncode;
import java.awt.FileDialog;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author mizereke
 */
public class FrmCodifica extends javax.swing.JDialog {

    /**
     * Creates new form FrmCodificar
     */
    public FrmCodifica(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlE1 = new javax.swing.JPanel();
        btnOpen = new javax.swing.JButton();
        pnlE2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        btnProcurar = new javax.swing.JButton();
        pnlE3 = new javax.swing.JPanel();
        btnCriptografar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableImagem = new javax.swing.JTable();
        pb = new javax.swing.JProgressBar();
        img = new javax.swing.JLabel();
        pnlBtnView = new javax.swing.JPanel();
        btnSaveAll = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Criptografar");

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        pnlE1.setBackground(new java.awt.Color(0, 164, 255));

        btnOpen.setText("Abrir Imagem");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlE1Layout = new javax.swing.GroupLayout(pnlE1);
        pnlE1.setLayout(pnlE1Layout);
        pnlE1Layout.setHorizontalGroup(
            pnlE1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlE1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(btnOpen)
                .addGap(22, 22, 22))
        );
        pnlE1Layout.setVerticalGroup(
            pnlE1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlE1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnOpen)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlE2.setBackground(new java.awt.Color(0, 164, 255));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Salvar em:");

        txtPath.setEditable(false);

        btnProcurar.setText("Procurar");
        btnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlE2Layout = new javax.swing.GroupLayout(pnlE2);
        pnlE2.setLayout(pnlE2Layout);
        pnlE2Layout.setHorizontalGroup(
            pnlE2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlE2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(txtPath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnProcurar)
                .addGap(36, 36, 36))
        );
        pnlE2Layout.setVerticalGroup(
            pnlE2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlE2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlE2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcurar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlE3.setBackground(new java.awt.Color(0, 164, 255));

        btnCriptografar.setText("Criptografar");
        btnCriptografar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriptografarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlE3Layout = new javax.swing.GroupLayout(pnlE3);
        pnlE3.setLayout(pnlE3Layout);
        pnlE3Layout.setHorizontalGroup(
            pnlE3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlE3Layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(btnCriptografar)
                .addGap(73, 73, 73))
        );
        pnlE3Layout.setVerticalGroup(
            pnlE3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlE3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnCriptografar)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        tableImagem.setBackground(new java.awt.Color(254, 254, 254));
        tableImagem.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        tableImagem.setForeground(new java.awt.Color(1, 1, 1));
        tableImagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableImagem.setGridColor(new java.awt.Color(0, 164, 255));
        tableImagem.setInheritsPopupMenu(true);
        tableImagem.setSelectionBackground(new java.awt.Color(70, 182, 240));
        tableImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableImagemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableImagem);

        pb.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        pb.setForeground(new java.awt.Color(1, 1, 1));
        pb.setString("");
        pb.setStringPainted(true);

        img.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        img.setForeground(new java.awt.Color(1, 1, 1));
        img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        img.setText("IMG Cripter");

        pnlBtnView.setBackground(new java.awt.Color(254, 254, 254));

        btnSaveAll.setText("Save All");
        btnSaveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAllActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jButton6.setText("Copy");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBtnViewLayout = new javax.swing.GroupLayout(pnlBtnView);
        pnlBtnView.setLayout(pnlBtnViewLayout);
        pnlBtnViewLayout.setHorizontalGroup(
            pnlBtnViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBtnViewLayout.createSequentialGroup()
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        pnlBtnViewLayout.setVerticalGroup(
            pnlBtnViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBtnViewLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlBtnViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveAll)
                    .addComponent(btnSave)
                    .addComponent(jButton6)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlE1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlE2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlE3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlBtnView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
                    .addComponent(pb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnlE2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlE1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlE3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlBtnView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        open();
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarActionPerformed
        openPath();
    }//GEN-LAST:event_btnProcurarActionPerformed

    private void btnCriptografarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriptografarActionPerformed
        criptografar();
    }//GEN-LAST:event_btnCriptografarActionPerformed

    private void tableImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableImagemMouseClicked
        visualizar();
    }//GEN-LAST:event_tableImagemMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        salvaChave();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSaveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAllActionPerformed
        salvaChaveAll();
        for(int i= 0; i<this.imageList.size(); i++){
            System.out.println("chave"+i+": "+ this.imageList.get(i).getChave());
        }
    }//GEN-LAST:event_btnSaveAllActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        copyKey();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCodifica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCodifica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCodifica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCodifica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmCodifica dialog = new FrmCodifica(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private MyModel model;
    private ArrayList<Imagem> imageList;
    private Integer pronto;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCriptografar;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnProcurar;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveAll;
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pb;
    private javax.swing.JPanel pnlBtnView;
    private javax.swing.JPanel pnlE1;
    private javax.swing.JPanel pnlE2;
    private javax.swing.JPanel pnlE3;
    private javax.swing.JTable tableImagem;
    private javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables

    private void reset(){
        //Inicializar variaveis
        this.model = new MyModel();
        this.imageList = new <Imagem>ArrayList();
        this.pronto = 0;
        
        //Ajustes da tela
        pb.setString("");
        pb.setValue(0);
        btnCriptografar.setEnabled(false);
        btnProcurar.setEnabled(false);
        txtPath.setText("");
        
        loadTable();
        
        //Esconder componentes
        pnlBtnView.setVisible(false);
   
       
    }
    
    private void open(){
        reset();
        img.setText("IMG Cripter");
        img.setIcon(null);
        
        FileDialog dialog = new FileDialog(this ,"Abrir Imagem", FileDialog.LOAD);
        dialog.setMultipleMode(true);
        dialog.show();
        
        if(dialog.getFile() != null){
            File[] files = dialog.getFiles();
            String nadave = "--------------------------------------";
            for(int i=0; i<files.length; i++){
                this.imageList.add(new Imagem(files[i].getName(), files[i].getPath() , nadave, "Pendente"));
                this.model.addRow(this.imageList.get(i));        
            }
           
            loadTable();
            btnProcurar.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null, "Nenhuma imagem foi selecionada!");
        }
        
    }
    
    private void openPath(){
        JFileChooser jFileChooser1 = new JFileChooser();  
        
        jFileChooser1.setApproveButtonText("Selecionar");  
        jFileChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  
        int returnVal = jFileChooser1.showDialog(this, null);  
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {  
            txtPath.setText(jFileChooser1.getSelectedFile().getAbsolutePath());
            btnCriptografar.setEnabled(true);
        }
    }
    
    private void loadTable(){
        tableImagem.setModel(this.model); 
    }
    
    private void criptografar(){
        ArrayList<ImgEncode> imgEList = new <ImgEncode>ArrayList();
        ArrayList<Thread> threadList = new <Thread> ArrayList();
        
        String path;
        String pathEnd;
        
        for(int i = 0; i < this.imageList.size(); i++){
            path = this.imageList.get(i).getPath();
            pathEnd = txtPath.getText()+ "/"+ this.imageList.get(i).getNome();
            
            imgEList.add(new ImgEncode());
            imgEList.get(i).setPath(path);
            imgEList.get(i).setPathEnd(pathEnd);
            imgEList.get(i).setFrmC(this);
            imgEList.get(i).setPos(i);
            
            threadList.add(new Thread(imgEList.get(i)));
            threadList.get(i).start();
        }
        
        pb.setString("0% do total concluido");
        desativaButton();
    }
    
    public void alterStatus(String status, Integer pos){
        if(!status.equals("Criptografando 100%")){
            this.model.setValueAt(status, pos, 2);
        }else{
            this.model.setValueAt("Concluido", pos, 2);
            this.imageList.get(pos).setPronto(true);
            
            if(!haNaoSalvo()){
                btnSaveAll.setEnabled(false);
            }else{
                btnSaveAll.setEnabled(true);
            }
        }      
    }
    
    public void addKey(String key, Integer pos){
        this.model.setValueAt(key, pos, 1);
        this.imageList.get(pos).setChave(key);
    }
    
    public void alterBar(){
        this.pronto++;
        
        Integer progress = (this.pronto * 100)/this.imageList.size();
        
        pb.setValue(progress);
        
        if(this.pronto < this.imageList.size()){
            pb.setString(Integer.toString(progress)+"% do total concluido");
        }else{
            pb.setString("Concluido com sucesso!");
            btnOpen.setEnabled(true);
            img.setIcon(null);
            if(tableImagem.getSelectedRow() < 0){
                tableImagem.addRowSelectionInterval(0, 0);
            }
            
            visualizar();
        }
    }
    
    private void alterImg(String path){
        img.setText("");
        ImageIcon imgIcon = new ImageIcon(path);
        imgIcon.setImage(imgIcon.getImage().getScaledInstance(224, 177, 100));
        Icon icon = imgIcon;
        img.setIcon(icon);
    }
    
    private void visualizar(){
        if(tableImagem.getSelectedRow() >= 0 && imageList.get(tableImagem.getSelectedRow()).getPronto()){
            alterImg(this.imageList.get(tableImagem.getSelectedRow()).getPath());
            pnlBtnView.setVisible(true);
            
            habilitaBtnKey();
        }
    }
    
    private Boolean haNaoSalvo(){
        Boolean naoSalvo = false;
        for(int i =0; i<imageList.size(); i++){
            if(!imageList.get(i).getSalvo() && imageList.get(i).getPronto()){
                naoSalvo = true;
            }
        }
        
        return naoSalvo;
    }
    
    private void habilitaBtnKey(){
        if(imageList.get(tableImagem.getSelectedRow()).getSalvo()){
            btnSave.setEnabled(false);
        }else{
            btnSave.setEnabled(true);
        }
        
        if(!haNaoSalvo()){
            btnSaveAll.setEnabled(false);
        }else{
            btnSaveAll.setEnabled(true);
        }
    }
    
    private void salvaChave(){
        if(tableImagem.getSelectedRow() >= 0){
            Integer index = tableImagem.getSelectedRow();
        
            DAO dao = DAO.getDAO();
            dao.gravar(new Chave(this.imageList.get(tableImagem.getSelectedRow()).getChave()));

            this.imageList.get(index).setSalvo(true);
            
            alterStatus("Salvo com sucesso!", index);
            habilitaBtnKey();
        }
    }
    
    private void salvaChaveAll(){
        for (int i = 0; i<this.imageList.size(); i++){
            if (!this.imageList.get(i).getSalvo() && this.imageList.get(i).getPronto()){
                DAO dao = DAO.getDAO();
                dao.gravar(new Chave(this.imageList.get(i).getChave()));
                this.imageList.get(i).setSalvo(true);
                
                alterStatus("Salvo com sucesso!", i);
            }
        }
        
        habilitaBtnKey();
    }
    
    private void desativaButton(){
        btnOpen.setEnabled(false);
        btnProcurar.setEnabled(false);
        btnCriptografar.setEnabled(false);
    }
    
    private void copyKey(){  
        if(tableImagem.getSelectedRow() >= 0){
            String key = this.imageList.get(tableImagem.getSelectedRow()).getChave();
            
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();  
            String text = key;
            StringSelection selection = new StringSelection(text);  
            clipboard.setContents(selection, null);  
            
            JOptionPane.showMessageDialog(null, "Copiado com sucesso!\n Chave: " + key);
        }
    }  
   
}
